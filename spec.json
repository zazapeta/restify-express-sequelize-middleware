{
  "info": { "title": "API", "version": "1.0.0" },
  "host": "localhost",
  "basePath": "/",
  "swagger": "2.0",
  "paths": {
    "/posts": {
      "post": {
        "tags": ["Post"],
        "summary": "Create a new Post",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Post object that need to be created",
            "required": true,
            "schema": { "$ref": "#/definitions/Post" }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": { "$ref": "#/definitions/Post" }
          },
          "400": {
            "description": "Bad Request - the payload is not validated"
          },
          "403": {
            "description": "Forbidden - the request is not authentified"
          }
        }
      },
      "get": {
        "tags": ["Post"],
        "summary": "List all of Post",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Post" }
            }
          },
          "400": {
            "description": "Bad Request - the payload is not validated"
          },
          "403": {
            "description": "Forbidden - the request is not authentified"
          }
        }
      }
    },
    "/posts/:id": {
      "get": {
        "tags": ["Post"],
        "summary": "Read Post with the given id",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "$ref": "#/definitions/Post" }
          },
          "400": {
            "description": "Bad Request - the payload is not validated"
          },
          "403": {
            "description": "Forbidden - the request is not authentified"
          },
          "404": { "description": " Not Found - the given id is not reachable" }
        }
      },
      "put": {
        "tags": ["Post"],
        "summary": "Update Post with the given id and the body attached to",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Post object that need to be updated",
            "required": true,
            "schema": { "$ref": "#/definitions/Post" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "$ref": "#/definitions/Post" }
          },
          "400": {
            "description": "Bad Request - the payload is not validated"
          },
          "403": {
            "description": "Forbidden - the request is not authentified"
          },
          "404": { "description": " Not Found - the given id is not reachable" }
        }
      },
      "delete": {
        "tags": ["Post"],
        "summary": "Delete Post with the given id",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "$ref": "#/definitions/Post" }
          },
          "400": {
            "description": "Bad Request - the payload is not validated"
          },
          "403": {
            "description": "Forbidden - the request is not authentified"
          },
          "404": { "description": " Not Found - the given id is not reachable" }
        }
      }
    },
    "/users": {
      "post": {
        "tags": ["AuthModel"],
        "summary": "Create a new AuthModel",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "AuthModel object that need to be created",
            "required": true,
            "schema": { "$ref": "#/definitions/AuthModel" }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": { "$ref": "#/definitions/AuthModel" }
          },
          "400": {
            "description": "Bad Request - the payload is not validated"
          },
          "403": {
            "description": "Forbidden - the request is not authentified"
          }
        }
      },
      "get": {
        "tags": ["AuthModel"],
        "summary": "List all of AuthModel",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/AuthModel" }
            }
          },
          "400": {
            "description": "Bad Request - the payload is not validated"
          },
          "403": {
            "description": "Forbidden - the request is not authentified"
          }
        }
      }
    },
    "/users/:id": {
      "get": {
        "tags": ["AuthModel"],
        "summary": "Read AuthModel with the given id",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "$ref": "#/definitions/AuthModel" }
          },
          "400": {
            "description": "Bad Request - the payload is not validated"
          },
          "403": {
            "description": "Forbidden - the request is not authentified"
          },
          "404": { "description": " Not Found - the given id is not reachable" }
        }
      },
      "put": {
        "tags": ["AuthModel"],
        "summary": "Update AuthModel with the given id and the body attached to",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "AuthModel object that need to be updated",
            "required": true,
            "schema": { "$ref": "#/definitions/AuthModel" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "$ref": "#/definitions/AuthModel" }
          },
          "400": {
            "description": "Bad Request - the payload is not validated"
          },
          "403": {
            "description": "Forbidden - the request is not authentified"
          },
          "404": { "description": " Not Found - the given id is not reachable" }
        }
      },
      "delete": {
        "tags": ["AuthModel"],
        "summary": "Delete AuthModel with the given id",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "$ref": "#/definitions/AuthModel" }
          },
          "400": {
            "description": "Bad Request - the payload is not validated"
          },
          "403": {
            "description": "Forbidden - the request is not authentified"
          },
          "404": { "description": " Not Found - the given id is not reachable" }
        }
      }
    }
  },
  "definitions": {
    "Post": {
      "type": "object",
      "properties": {
        "id": { "type": "integer", "format": "int32" },
        "title": { "type": "string", "maxLength": 255 },
        "message": { "type": "string", "maxLength": 255 },
        "createdAt": { "type": "string", "format": "date-time" },
        "updatedAt": { "type": "string", "format": "date-time" },
        "UserId": { "type": "integer", "format": "int32" }
      },
      "required": ["id", "createdAt", "updatedAt"]
    },
    "AuthModel": {
      "type": "object",
      "properties": {
        "id": { "type": "integer", "format": "int32" },
        "username": { "type": "string", "maxLength": 255 },
        "password": { "type": "string", "maxLength": 255 },
        "firstName": { "type": "string", "maxLength": 255 },
        "lastName": { "type": "string", "maxLength": 255 },
        "email": { "type": "string", "maxLength": 255 },
        "createdAt": { "type": "string", "format": "date-time" },
        "updatedAt": { "type": "string", "format": "date-time" }
      },
      "required": ["id", "createdAt", "updatedAt"]
    }
  }
}
